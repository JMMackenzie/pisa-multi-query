sudo: require
language: cpp

branches:
  only:
    - master

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-xenial-6.0

env:
  global:
    - CODECOV_TOKEN="e3f86b6b-0770-4816-9b7d-19b0c550229f"


cache:
  - ccache
  - apt: true
  - directories:
    - ${TRAVIS_BUILD_DIR}/build/external
  
matrix:
  fast_finish: true
  include:
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc7
        apt:
          sources: *all_sources
          packages:
            - g++-7
            - lcov
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && COVERAGE=On"
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc7
        apt:
          sources: *all_sources
          packages: ['g++-7']
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && PISA_COMPILE_HEADERS=On"
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: ['g++-8']
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && COVERAGE=Off"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-5.0', 'libstdc++-7-dev']
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0 && COVERAGE=Off"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-6.0', 'libstdc++-8-dev']
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0 && COVERAGE=Off"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-6.0', 'libstdc++-8-dev']
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0 && COVERAGE=Off"
      script:
          - mkdir build
          - cd build
          - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          - cp ../script/remove-submodules.py .
          - cp ../.clang-tidy .
          - python remove-submodules.py
          - python ../script/clang-tidy.py .. --exclude varintgb.hpp VarIntG8IU.h mapper.hpp mappable_vector.hpp uniform_partitioned_sequence.hpp indexed_sequence.hpp partitioned_sequence.hpp strict_sequence.hpp positive_sequence.hpp streamvbyte.hpp simdbp.hpp simple16.hpp simple8b.hpp qmx.hpp maskedvbyte.hpp interpolative_coding.hpp integer_codes.hpp compact_ranked_bitvector.hpp compact_elias_fano.hpp all_ones_sequence.hpp block_codecs.hpp block_posting_list.hpp bit_vector.hpp
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env: MATRIX_EVAL="CC=clang && CXX=clang++ && COVERAGE=Off"

# Install dependencies
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      brew install ccache;
      export PATH="/usr/local/opt/ccache/libexec:$PATH";
    fi
  - eval "${MATRIX_EVAL}"

script:
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=${COVERAGE} -DPISA_COMPILE_HEADERS=${PISA_COMPILE_HEADERS} ${CMAKE_OPTIONS} ..
    - if [[ "$PISA_COMPILE_HEADERS" != "On" ]]; then 
        make -j2;
        ctest -j2;
      fi

after_success:
  - if [[ "${COVERAGE}" == "On" ]]; then 
      bash <(curl -s https://codecov.io/bash);
    fi
